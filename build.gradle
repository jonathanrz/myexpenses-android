// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.0.6'
    repositories {
        jcenter()
        maven { url 'https://www.testfairy.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0-beta4'
        classpath 'com.testfairy.plugins.gradle:testfairy:1.12'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // Sdk and tools
    minSdkVersion = 19
    targetSdkVersion = 25
    compileSdkVersion = 25
    buildToolsVersion = '25.0.1'

    // App dependencies
    butterKnifeVersion = '7.0.1'
    commonsLangVersion = '3:3.4'
    droidMVP = '0.1.3'
    espressoVersion = '2.2.2'
    hamcrestVersion = '1.3'
    javassist = '3.20.0-GA'
    jodaVersion = '2.9.1'
    junitVersion = '4.12'
    lombokVersion = '1.12.6'
    mockitoVersion = '1.10.19'
    multiDex = '1.0.1'
    playServicesVersion = '10.2.0'
    powerMockito = '1.6.2'
    retrofitVersion = '2.0.2'
    rulesVersion = '0.5'
    runnerVersion = '0.5'
    rxAndroidVersion = '1.0.1'
    rxJavaVersion = '1.0.14'
    stethoVersion = '1.3.0'
    stickyHeadersVersion = '0.4.3@aar'
    supportLibraryVersion = '25.1.1'
    uiAutomatorVersion = '2.1.1'
    testButler = '1.0.0'
}

ext.gitCommitCount = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    def commitCount = stdout.toString().trim().toInteger()
    return commitCount
}

ext.getVersionName = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    def branch = stdout.toString().trim()

    if (branch.equals("master")) {
        return gitCommitCount();
    } else {
        return branch;
    }
}
