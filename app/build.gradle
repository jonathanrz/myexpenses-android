apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'testfairy'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    def MYEXPENSES_AUTH_TOKEN = '"' + System.getenv("MYEXPENSES_AUTH_TOKEN") + '"' ?: '"Auth Token"';

    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize "2g"
    }

    signingConfigs {
        jonathan {
            storeFile file("jonathan.keystore")
            storePassword System.getenv("MYEXPENSES_JONATHAN_KEY_PASS")
            keyAlias "jonathanrz"
            keyPassword System.getenv("MYEXPENSES_JONATHAN_KEY_PASS")
        }
        thainara {
            storeFile file("thainara.keystore")
            storePassword System.getenv("MYEXPENSES_THAINARA_KEY_PASS")
            keyAlias "jonathanrz"
            keyPassword System.getenv("MYEXPENSES_THAINARA_KEY_PASS")
        }
    }

    defaultConfig {
        applicationId "br.com.jonathanzanella.myexpenses"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.gitCommitCount()
        versionName "0.4.3." + rootProject.ext.getVersionName()
        testInstrumentationRunner "br.com.jonathanzanella.myexpenses.MyTestRunner"

        jackOptions {
            enabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            buildConfigField 'String', 'MYEXPENSES_AUTH_TOKEN', MYEXPENSES_AUTH_TOKEN
            testCoverageEnabled true
        }
        jonathan {
            applicationIdSuffix '.jonathan'
            versionNameSuffix '-JONATHAN'
            buildConfigField 'String', 'MYEXPENSES_AUTH_TOKEN', MYEXPENSES_AUTH_TOKEN
            debuggable true

            // NB: If you want to use the default debug key for a (non-debug)
            // build type, you need to specify it:
            signingConfig signingConfigs.jonathan
        }
        thainara {
            applicationIdSuffix '.thainara'
            versionNameSuffix '-THAINARA'
            buildConfigField 'String', 'MYEXPENSES_AUTH_TOKEN', MYEXPENSES_AUTH_TOKEN
            debuggable true

            // NB: If you want to use the default debug key for a (non-debug)
            // build type, you need to specify it:
            signingConfig signingConfigs.thainara
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'MYEXPENSES_AUTH_TOKEN', MYEXPENSES_AUTH_TOKEN
        }
    }

    testfairyConfig {
        apiKey System.getenv("MYEXPENSES_TEST_FAIRY_TOKEN")
        autoUpdate false
        notify true
        testersGroups "dev"
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Support Library
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"

    //Play Services
    compile "com.google.android.gms:play-services-gcm:$rootProject.playServicesVersion"

    //DBFlow
    compile "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.dbFlowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow:$rootProject.dbFlowVersion"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.dbFlowVersion"
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.dbFlowVersion"

    //Lombok
    provided "org.projectlombok:lombok:$rootProject.lombokVersion"
    kapt "org.projectlombok:lombok:$rootProject.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$rootProject.lombokVersion"

    //retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"

    //RxAndroid
    compile "io.reactivex:rxandroid:$rootProject.rxAndroidVersion"
    compile "io.reactivex:rxjava:$rootProject.rxJavaVersion"

    //JakeWharton
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    kapt "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"

    compile "net.danlew:android.joda:$rootProject.jodaVersion"
    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    compile "org.apache.commons:commons-lang$rootProject.commonsLangVersion"
    compile "com.timehop.stickyheadersrecyclerview:library:$rootProject.stickyHeadersVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    //Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"
    testCompile "org.javassist:javassist:$rootProject.ext.javassist"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    //Test bundler
    androidTestCompile "com.linkedin.testbutler:test-butler-library:$rootProject.ext.testButler"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile ("com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion") {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$rootProject.ext.uiAutomatorVersion"
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    resolutionStrategy.force "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    resolutionStrategy.force "com.android.support:design:$rootProject.supportLibraryVersion"
}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

repositories {
    mavenCentral()
}
kapt {
    generateStubs = true
}